#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

def inventory_dell_idrac_fan(info):
    inventory = []
    for line in info:
        inventory.append(( line[0], None ))
    return inventory

def check_dell_idrac_fan(item, params, info):
    fan_state = {
        0  : 'Unknown',
        1  : 'Ready',
        2  : 'Failed',
        3  : 'Online',
        4  : 'Offline',
        6  : 'Degraded',
        21 : 'Missing',
        }
    for line in info:
        if line[0] != item:
            continue
        state = saveint(line[2])
        try:
            info_text = "%s: State %s, Current Value %s" % (line[1],
                                                            fan_state[state],
                                                            line[3],
                                                            )
        except KeyError:
            info_text = "%s %d %s" % (line[1], state, line[3])
        perfdata = [ ( "RPM", saveint(line[3]), saveint(line[4]), saveint(line[5]) ) ]
        if state in [1, 3]:
            return (0, info_text, perfdata)
        if state in [4, 6]:
            return (1, info_text, perfdata)
        if state in [2, 21]:
            return (2, info_text, perfdata)
        return (3, info_text, perfdata)
    return (3, "Fan %s not found" % item, [])

check_info["dell_idrac_fan"] = {
    'check_function'        : check_dell_idrac_fan,
    'inventory_function'    : inventory_dell_idrac_fan,
    'service_description'   : 'iDRAC Fan %s',
    'has_perfdata'          : True,
    'snmp_info'             : ('.1.3.6.1.4.1.674.10892.5.4.700.12.1', ['2',  # coolingDeviceIndex
                                                                       '8',  # coolingDeviceLocationName
                                                                       '5',  # coolingDeviceStatus
                                                                       '6',  # coolingDeviceReading
                                                                       '12', # coolingDeviceLowerNonCriticalThreshold
                                                                       '13', # coolingDeviceLowerCriticalThreshold
                                                                       ] ),
    'snmp_scan_function'    : lambda oid: oid(".1.3.6.1.4.1.674.10892.5.4.700.12.1.2.1.1") != None,
}

