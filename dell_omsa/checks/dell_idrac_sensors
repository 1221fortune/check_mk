#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

def inventory_dell_idrac_sensors(info):
    return [ (x[0], None) for x in info ]

def check_dell_idrac_sensors(item, _no_params, info):
    #Probetypes found in check_openmanage3.pl
    probe_types = {
         1  : 'Other',      # type is other than following values
         2  : 'Unknown',    # type is unknown
         3  : 'AmbientESM', # type is Ambient Embedded Systems Management temperature probe
         16 : 'Discrete',   # type is temperature probe with discrete reading
    }
    probe_state = {
        1  : 'Other',
        2  : 'Unknown',
        3  : 'OK',
        4  : 'non Critical',
        5  : 'Critical',
        6  : 'non Recoverable',
        }
    for line in info:
        if line[0] == item:
            reading = saveint(line[2]) / 10.0
            msg = "Current: %.2fC Sensor: %s (Type: %s) " % \
            ( reading, line[4], probe_types[saveint(line[3])] )
            perf = [ ('temp', reading )]
            state = saveint(line[1])
            if state == 3:
                return 0, msg, perf
            if state in [1, 4]:
                return 1, msg + ", State %s" % probe_state[state], perf
            if state in [5, 6]:
                return 2, msg + ", State %s" % probe_state[state], perf
            return 3, msg + ", State %d" % state, perf

    return 3, "probe not found in SNMP tree"

check_info["dell_idrac_sensors"] = {
    "check_function"        : check_dell_idrac_sensors,
    "inventory_function"    : inventory_dell_idrac_sensors,
    "service_description"   : "iDRAC Sensor %s",
    "has_perfdata"          : True,
    # There is no other way to find out that openmanage is present.
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.4.1.674.10892.5.4.700.20.1.1.1.1'),
    "snmp_info"             : ( ".1.3.6.1.4.1.674.10892.5.4.700.20.1", [
                                        '2', #ProbeIndex
                                        '5', #ProbeStatus
                                        '6', #ProbeReading
                                        '7', #ProbeType
                                        '8', #ProbeLocationName
                                        #'10.1', #ProbeUpperCriticalThreshold',
                                        #'11.1', #ProbeUpperNonCriticalThreshold',
                                        #'12.1', #ProbeLowerNonCriticalThreshold',
                                        #'13.1', #ProbeLowerCriticalThreshold',
                                        #'16.1', #ProbeDiscreteReading',
                              ]),
}

