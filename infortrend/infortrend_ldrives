#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

#
# (c) 2013 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>
#

snmp_scan_functions['infortrend_ldrives'] = lambda oid: oid(".1.3.6.1.4.1.1714.1.2.1.6") != None

snmp_info['infortrend_ldrives'] = ( ".1.3.6.1.4.1.1714.1.2.1", [ "2", "6" ] )

def inventory_infortrend_ldrives(info):
    inventory = []
    for id, status in info:
        inventory.append( (id, int(status)) )
    return inventory

def check_infortrend_ldrives(item, params, info):
    status_info = { 
        0   : "Good",
        1   : "Rebuilding",
        2   : "Initializing",
        3   : "Degraded",
        4   : "Dead",
        5   : "Invalid",
        6   : "Incomplete",
        7   : "Drive Missing",
        }
    for slot, status in info:
        status = int(status)
        if slot == item:
            output = []
            if status & 128 == 128:
                output.append("Logical Drive Off-line (RW)")
                status = status & 127
                rc = 3
            if status not in status_info.keys():
                return (3, "Status is %d" % status)
            output.append(status_info[status])
            if status == 0:
                rc = 0
            if status == 1 or status == 2:
                rc = 1
            if status > 2:
                rc = 2
            return (rc, ", ".join(output))
    return (3, "not yet implemented")

check_info["infortrend_ldrives"] = (check_infortrend_ldrives, "IFT Logical Drive %s", 0, inventory_infortrend_ldrives)
