#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2013 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# We fetch the following columns from SNMP:
# 2  vSip
# 3  vSport
# 5  vSprotocol 
# 13 vSname
# 14 vSstate
# 16 vSConns
# 17 vSInPkts
# 19 vSInBytes

from pprint import pprint

def inventory_kemplb_virtual_server(info):
    return [ ( line[3], None) for line in info ]

def check_kemplb_virtual_server(item, _no_params, info):
    state_info = { 1: "inService",
                   2: "outOfService",
                   3: "failed",
                   4: "disabled",
                   5: "sorry",
                   6: "redirect",
                 }

    protocol_info = { 6: "tcp",
                      17: "udp",
                    }

    for vSip, vSport, vSprotocol, vSname, vSstate, vSConns, vSInPkts, vSInBytes in info:
        if vSname != item: continue

        vSport = int(vSport)
        vSprotocol = int(vSprotocol)
        vSstate = int(vSstate)
        vSConns = int(vSConns)
        vSInPkts = int(vSInPkts)
        vSInBytes = int(vSInBytes)

        try:
            infotext = "%s://%s:%d %s" % ( protocol_info[vSprotocol], vSip, vSport, state_info[vSstate] )
        except KeyError:
            infotext = "%d://%s:%d %d" % ( vSprotocol, vSip, vSport, vSstate )
        perfdata = [ ("connections", "%d" % vSConns ),
                     ("Packets In", "%d" % vSInPkts),
                     ("Bytes In", "%dB" % vSInBytes),
                   ]

        rc = 0
        if vSstate in [2, 3]:
            rc = 2
        if vSstate in [4, 5]:
            rc = 1

        return (rc, infotext, perfdata)

    return (3, "Virtual Server %s not found in SNMP data" % item)

check_info['kemplb_virtual_server'] = {
    "inventory_function"    : inventory_kemplb_virtual_server,
    "check_function"        : check_kemplb_virtual_server,
    "service_description"   : "VS %s",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.12196.13.1.1", [ 2, 3, 5, 13, 14, 16, 17, 19 ] ),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.4.1.12196.13.1.1.1.1"),
}
