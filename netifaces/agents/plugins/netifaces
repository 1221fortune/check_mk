#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2016 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Return network interface addresses

print '<<<netifaces>>>'

import subprocess

families = { 'link/loopback': 'AF_PACKET',
             'link/ether': 'AF_PACKET',
             'inet': 'AF_INET',
             'inet6': 'AF_INET6',
           }

info = map(lambda x: x.split(' '), subprocess.check_output(['ip', 'addr', 'show']).split('\n'))
ifaces = {}
curif = None
for line in info:
    if len(line) > 5:
        if line[1]:
            curif = line[1][:-1]
            ifaces[curif] = {}
        if curif:
            for type, family in families.iteritems():
                if line[4] == type:
                    if family not in ifaces[curif]:
                        ifaces[curif][family] = []
                    ifaces[curif][family].append(line[5])

for iface in ifaces:
    for family, addresses in ifaces[iface].iteritems():
        for address in addresses:
            print iface, family, address
