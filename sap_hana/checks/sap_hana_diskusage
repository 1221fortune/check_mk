#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) Gerd Stolz <Gerd.Stolz@sva.de>
# (c) Robert Sander <r.sander@heinlein-support.de>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output from agent:
#<<<sap_hana_diskusage:sep(44)>>>
#[[PRH00]]
#"Data","OK","Size 99.9 GB, Used 2.5 GB, Free 98 %"
#"Log","OK","Size 99.9 GB, Used 2.2 GB, Free 98 %"
#"Trace","OK","Size 196.9 GB, Used 25.4 GB, Free 88 %"
#
# This will be parsed into
# parsed = {
# u'PRH00': [[u'Data', u'OK', u'Size 99.9 GB, Used 2.5 GB, Free 98 %'], 
#            [u'Log', u'OK', u'Size 99.9 GB, Used 2.2 GB, Free 98 %'], 
#            [u'Trace', u'OK', u'Size 196.9 GB, Used 25.4 GB, Free 88 %']]
# }

def inventory_sap_hana_diskusage(parsed):
    for instance,lines in parsed.items():
        # instance = PRH00
        # lines = [[u'Data', u'OK', u'Size 99.9 GB, Used 2.5 GB, Free 98 %'], [u'Log', u'OK', u'Size 99.9 GB, Used 2.2 GB, Free 98 %'], [u'Trace', u'OK', u'Size 196.9 GB, Used 25.4 GB, Free 88 %']]
        for line in lines:
            # [u'Data', u'OK', u'Size 99.9 GB, Used 2.5 GB, Free 98 %']
            if len(line) > 2: #len = length, array/liste = zahl der elemente
                item = "%s - %s" % (instance, line[0])
                yield item, {}

def check_sap_hana_diskusage(item, params, parsed):
    for instance,lines in parsed.items():
        for line in lines:
            itemname = "%s - %s" % (instance, line[0])
            if len(line) > 2 and item == itemname:
                status = line[1]     # status=status
                if status == "OK":
                    returnCode = 0
                elif status == "UNKNOWN":
                    returnCode = 3
                else:
                    returnCode = 2
                yield returnCode, 'Status: %s' % status

                value = line[2]      # value=size,used,free
                disk_size = savefloat(re.search("(?<=Size )([\d.]*)", value).group(0)) * 1024.0
                disk_used = savefloat(re.search("(?<=Used )([\d.]*)", value).group(0)) * 1024.0
                disk_avail = disk_size - disk_used
                yield df_check_filesystem_list(item, params, [ (item, disk_size, disk_avail, 0) ])

check_info["sap_hana_diskusage"] = {
    "parse_function"          : parse_sap_hana,
    "check_function"          : check_sap_hana_diskusage,
    "inventory_function"      : inventory_sap_hana_diskusage,
    "service_description"     : "SAP HANA Disk %s",
    "has_perfdata"            : True,
    "includes"                : [ 'sap_hana.include', 'df.include' ],
    "group"                   : 'filesystem',
    "default_levels_variable" : 'filesystem_default_levels',
}
