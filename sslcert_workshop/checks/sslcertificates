#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2013 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings['sslcertificates_default_levels'] = {
    'age': ( 90, 60 ),
    'warnalgo': [ 'md5WithRSAEncryption', 'sha1WithRSAEncryption' ],
    }

def inventory_sslcertificates(info):
    if opt_debug:
        pprint.pprint(info)
    for line in info:
        yield (line[0], None)

def check_sslcertificates(item, params, info):
    if opt_debug:
        pprint.pprint(item)
        pprint.pprint(params)
        pprint.pprint(info)

    warn, crit = params.get('age', (0, 0))
    warnalgos = params.get('warnalgo', [])

    for line in info:
        if item == line[0]:
            endtime = saveint(line[1])
            now = int(time.time())
            daysremaining = ( endtime - now ) / 60 / 60 / 24
            status = 0
            message = "%d days remaining for %s" % (daysremaining, " ".join(line[3:]))

            signalgo = line[2]
            if signalgo in warnalgos:
                status = 1
                message += ", signature algorithm is %s (!)" % signalgo

            if daysremaining < crit:
                status = 2
            elif daysremaining < warn:
                status = 1
            return (status, message)

check_info['sslcertificates'] = {
    'check_function':      check_sslcertificates,
    'service_description': "SSL Certificate in %s",
    'has_perfdata':        False,
    'inventory_function':  inventory_sslcertificates,
    'group':               'sslcertificates',
    'default_levels_variable' : "sslcertificates_default_levels",
}
